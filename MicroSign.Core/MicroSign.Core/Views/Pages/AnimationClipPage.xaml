<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MicroSign.Core.Views.Pages"
             xmlns:core="clr-namespace:MicroSign.Core"
             xmlns:vm="clr-namespace:MicroSign.Core.ViewModels.Pages"
    xmlns:System="clr-namespace:System;assembly=System.Runtime" xmlns:ValueConverters="clr-namespace:MicroSign.Core.ValueConverters" x:Class="MicroSign.Core.Views.Pages.AnimationClipPage"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
    >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/MicroSign.Core;component/CommonResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <ValueConverters:EnumMatchVisibilityValueConverter x:Key="EnumMatchVisibilityValueConverter"/>
            <!-- アニメーションプレビュー図形スタイル -->
            <Style x:Key="AnimationPreviewShapeStyle" TargetType="{x:Type Shape}">
                <Setter Property="StrokeThickness" Value="1"/>
                <Setter Property="Stroke" Value="#FF0000"/>
            </Style>

            <!-- 方向ボタンスタイル -->
            <Style x:Key="MoveDirectionButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource OperationButtonStyle}">
                <Setter Property="Margin" Value="0,2,0,0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
            </Style>

            <!-- 方向ボタン選択四角形スタイル -->
            <Style x:Key="MoveDirectionSelectedRectangleStyle" TargetType="{x:Type Rectangle}">
                <Setter Property="Fill" Value="{StaticResource Accent.Foreground}"/>
                <Setter Property="RadiusX" Value="1"/>
                <Setter Property="RadiusY" Value="2"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.Style>
        <Style TargetType="{x:Type UserControl}" BasedOn="{StaticResource Page.Background}"/>
    </UserControl.Style>
    <Grid Loaded="Root_Loaded">
        <Grid.DataContext>
            <vm:AnimationClipPageViewModel x:Name="ViewModel" OkClick="OnOkClick" CancelClick="OnCancelClick"/>
        </Grid.DataContext>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="{StaticResource InputHeaderSpaceGridLength}"/>
            <ColumnDefinition Width="110"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="{StaticResource InputLineSpaceGridLength}"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Border Background="{StaticResource Group.Background}">
            <Viewbox>
                <Grid>
                    <Image x:Name="PreviewImage" Stretch="None" Source="{Binding PreviewImage}"/>
                    <Grid x:Name="MoveUpGrid" Visibility="{Binding MoveDirection, ConverterParameter=Up:Visible, Converter={StaticResource EnumMatchVisibilityValueConverter}}" d:IsHidden="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Rectangle Style="{StaticResource AnimationPreviewShapeStyle}" Width="{Binding MatrixLedWidth}" Height="{Binding MatrixLedHeight}"/>
                        <Path Data="M1,0 L1,1" Style="{StaticResource AnimationPreviewShapeStyle}" Stretch="Fill" Grid.Row="1" HorizontalAlignment="Center" StrokeStartLineCap="Square"/>
                        <Path Data="M0,0 L3,3 6,0" Style="{StaticResource AnimationPreviewShapeStyle}" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                    </Grid>
                    <Grid x:Name="MoveDownGrid" Visibility="{Binding MoveDirection, ConverterParameter=Down:Visible, Converter={StaticResource EnumMatchVisibilityValueConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle Style="{StaticResource AnimationPreviewShapeStyle}" Width="{Binding MatrixLedWidth}" Height="{Binding MatrixLedHeight}" Grid.Row="1"/>
                        <Path Data="M1,1 L1,0" Style="{StaticResource AnimationPreviewShapeStyle}" Stretch="Fill" HorizontalAlignment="Center" StrokeStartLineCap="Square"/>
                        <Path Data="M0,3 L3,0 6,3" Style="{StaticResource AnimationPreviewShapeStyle}" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                    </Grid>
                </Grid>
            </Viewbox>
        </Border>

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="{StaticResource InputLineSpaceGridLength}"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="{StaticResource InputLineSpaceGridLength}"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="{StaticResource InputLineSpaceGridLength}"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="{StaticResource InputLineSpaceGridLength}"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="{StaticResource InputLineSpaceGridLength}"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <TextBlock Style="{StaticResource InputHeaderTextBlockStyle}" Text="アニメーション動作"/>

            <TextBlock Text="移動方向" Grid.Row="2"/>
            <Grid Grid.Row="3">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition Height="0*"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Button Command="{Binding MoveDirectionSelectCommand}" CommandParameter="{x:Static vm:AnimationMoveDirection.Up}" Visibility="{Binding MoveDirection, ConverterParameter=Up:Visible;Down:Visible;, Converter={StaticResource EnumMatchVisibilityValueConverter}}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MoveDirectionButtonStyle}">
                            <!-- MoveDirection=Upの場合に背景色を変更するトリガー -->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MoveDirection}" Value="Up">
                                    <Setter Property="Background" Value="{StaticResource Accent.Foreground}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <TextBlock Text="下から上へ"/>
                </Button>
                <Button Command="{Binding MoveDirectionSelectCommand}" CommandParameter="{x:Static vm:AnimationMoveDirection.Down}" Visibility="{Binding MoveDirection, ConverterParameter=Up:Visible;Down:Visible;, Converter={StaticResource EnumMatchVisibilityValueConverter}}" Grid.Row="1">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MoveDirectionButtonStyle}">
                            <!-- MoveDirection=Downの場合に背景色を変更するトリガー -->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MoveDirection}" Value="Down">
                                    <Setter Property="Background" Value="{StaticResource Accent.Foreground}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <TextBlock Text="上から下へ"/>
                </Button>
                <Button Command="{Binding MoveDirectionSelectCommand}" CommandParameter="{x:Static vm:AnimationMoveDirection.Left}" Visibility="{Binding MoveDirection, ConverterParameter=Left:Visible;Right:Visible;, Converter={StaticResource EnumMatchVisibilityValueConverter}}" Grid.Row="2">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MoveDirectionButtonStyle}">
                            <!-- MoveDirection=Leftの場合に背景色を変更するトリガー -->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MoveDirection}" Value="Left">
                                    <Setter Property="Background" Value="{StaticResource Accent.Foreground}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <TextBlock Text="右から左へ"/>
                </Button>
                <Button Command="{Binding MoveDirectionSelectCommand}" CommandParameter="{x:Static vm:AnimationMoveDirection.Right}" Visibility="{Binding MoveDirection, ConverterParameter=Left:Visible;Right:Visible;, Converter={StaticResource EnumMatchVisibilityValueConverter}}" Grid.Row="3">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MoveDirectionButtonStyle}">
                            <!-- MoveDirection=Rightの場合に背景色を変更するトリガー -->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MoveDirection}" Value="Right">
                                    <Setter Property="Background" Value="{StaticResource Accent.Foreground}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <TextBlock Text="左から右へ"/>
                </Button>
            </Grid>

            <TextBlock Text="移動速度" Grid.Row="5"/>
            <Grid Grid.Row="7">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="2"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="2"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Slider Minimum="1" Maximum="5" SmallChange="1" LargeChange="2" Value="{Binding MoveSpeed}"/>
                <TextBox IsReadOnly="True" Text="{Binding MoveSpeed}" Grid.Column="2"/>
                <TextBlock Text="px" Grid.Column="4"/>
            </Grid>

            <TextBlock Text="アニメーション密度" Grid.Row="9"/>
            <ComboBox SelectedValue="{Binding DisplayPeriodMillisecond, Mode=TwoWay}" DisplayMemberPath="Name" SelectedValuePath="Value" Grid.Row="11">
                <ComboBox.ItemsSource>
                    <x:Array Type="{x:Type core:SelectValueItem}">
                        <core:SelectValueItem Name="ゆっくり" Value="100"/>
                        <core:SelectValueItem Name="標準" Value="50"/>
                        <core:SelectValueItem Name="滑らか" Value="33"/>
                    </x:Array>
                </ComboBox.ItemsSource>
            </ComboBox>
        </Grid>

        <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="{StaticResource Overlap.ButtonMargin}"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="{StaticResource Overlap.GridSeparetor}"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition MinWidth="{StaticResource Overlap.ButtonMargin}"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="1" Content="{Binding OkText}" Command="{Binding OkCommand}" Width="{StaticResource Overlap.ButtonWidth}" Height="{StaticResource Overlap.ButtonHeight}"/>
            <Button Grid.Column="3" Content="{Binding CancelText}" Command="{Binding CancelCommand}" Width="{StaticResource Overlap.ButtonWidth}" Height="{StaticResource Overlap.ButtonHeight}"/>
        </Grid>
    </Grid>
</UserControl>
